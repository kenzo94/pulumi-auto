{
	"name": "load_product_table",
	"properties": {
		"activities": [
			{
				"name": "deltaload eq true",
				"description": "True: delta load\nFalse: full load",
				"type": "IfCondition",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@pipeline().parameters.deltaload",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "ASQLSalesLTProductAllToADLTempProduct",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "select * from SalesLT.Product",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_ASQL_DB",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "DS_DL_temp",
									"type": "DatasetReference",
									"parameters": {
										"fileName": "Product.parquet"
									}
								}
							]
						}
					],
					"ifTrueActivities": [
						{
							"name": "DS_ASQL_dboWatermarktable_FRO",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "select * from WaterMarkTable where TableName='Product'",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "DS_ASQL_DB",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "DS_ASQL_SalesLTProduct_FRO",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "select MAX(ModifiedDate) as NewWatermarkvalue from SalesLT.Product",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "DS_ASQL_DB",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "ASQLSalesLTProductToADLTempProduct",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "DS_ASQL_SalesLTProduct_FRO",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "DS_ASQL_dboWatermarktable_FRO",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "select * from SalesLT.Product where ModifiedDate> '@{activity('DS_ASQL_dboWatermarktable_FRO').output.firstRow.WatermarkValue}' and ModifiedDate<= '@{activity('DS_ASQL_SalesLTProduct_FRO').output.firstRow.NewWatermarkvalue}'",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"validateDataConsistency": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_ASQL_DB",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "DS_DL_temp",
									"type": "DatasetReference",
									"parameters": {
										"fileName": "Product.parquet"
									}
								}
							]
						},
						{
							"name": "ASQL_prc_USPWriteWatermark",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "ASQLSalesLTProductToADLTempProduct",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[usp_write_watermark]",
								"storedProcedureParameters": {
									"modifiedDate": {
										"value": {
											"value": "@{activity('DS_ASQL_SalesLTProduct_FRO').output.firstRow.NewWatermarkvalue}",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"TableName": {
										"value": {
											"value": "@{activity('DS_ASQL_dboWatermarktable_FRO').output.firstRow.TableName}",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_ASQL_SalesLT",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "ASQL_prc_CDUpdateErrorTable",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "ASQLSalesLTProductToADLTempProduct",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[UpdateErrorTable]",
								"storedProcedureParameters": {
									"DataFactory_Name": {
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										},
										"type": "String"
									},
									"Destination": {
										"value": "temp",
										"type": "String"
									},
									"ErrorCode": {
										"value": {
											"value": "@{activity('ASQLSalesLTProductToADLTempProduct').error.errorCode}",
											"type": "Expression"
										},
										"type": "String"
									},
									"ErrorDescription": {
										"value": {
											"value": "@{activity('ASQLSalesLTProductToADLTempProduct').error.message}",
											"type": "Expression"
										},
										"type": "String"
									},
									"ErrorLoggedTime": {
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										},
										"type": "String"
									},
									"Execution_Status": {
										"value": {
											"value": "@{activity('ASQLSalesLTProductToADLTempProduct').output.executionDetails[0].status}",
											"type": "Expression"
										},
										"type": "String"
									},
									"FailureType": {
										"value": {
											"value": "@concat(activity('ASQLSalesLTProductToADLTempProduct').error.message,'failureType:',activity('ASQLSalesLTProductToADLTempProduct').error.failureType)",
											"type": "Expression"
										},
										"type": "String"
									},
									"Pipeline_Name": {
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										},
										"type": "String"
									},
									"RunId": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "String"
									},
									"Sink_Type": {
										"value": {
											"value": "@{activity('ASQLSalesLTProductToADLTempProduct').output.executionDetails[0].sink.type}",
											"type": "Expression"
										},
										"type": "String"
									},
									"Source": {
										"value": {
											"value": "SalesLT.Product",
											"type": "Expression"
										},
										"type": "String"
									},
									"Source_Type": {
										"value": {
											"value": "@{activity('ASQLSalesLTProductToADLTempProduct').output.executionDetails[0].source.type}",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_ASQL_SalesLT",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "DF_Import_ADLTempProduct",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "deltaload eq true",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "DF_Import_ADLTempProduct",
						"type": "DataFlowReference"
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "archiv_temp",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "DF_Import_ADLTempProduct",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ParquetSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						}
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "DS_DL_temp",
						"type": "DatasetReference",
						"parameters": {
							"fileName": {
								"value": "temp_Product_Table.parquet",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DS_DL_archiv",
						"type": "DatasetReference",
						"parameters": {
							"filename": {
								"value": "@concat('temp_Product_Table_',utcnow(),'.parquet')",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "log error dataflow",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "DF_Import_ADLTempProduct",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[UpdateErrorTable]",
					"storedProcedureParameters": {
						"DataFactory_Name": {
							"value": {
								"value": "@pipeline().DataFactory",
								"type": "Expression"
							},
							"type": "String"
						},
						"Destination": {
							"value": "import",
							"type": "String"
						},
						"ErrorCode": {
							"value": {
								"value": "@{activity('DF_Import_ADLTempProduct').error.errorCode}",
								"type": "Expression"
							},
							"type": "String"
						},
						"ErrorDescription": {
							"value": {
								"value": "@{activity('DF_Import_ADLTempProduct').error.message}",
								"type": "Expression"
							},
							"type": "String"
						},
						"ErrorLoggedTime": {
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							},
							"type": "String"
						},
						"Execution_Status": {
							"value": "k.a.",
							"type": "String"
						},
						"FailureType": {
							"value": "k.a.",
							"type": "String"
						},
						"Pipeline_Name": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"RunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"Sink_Type": {
							"value": "k.a.",
							"type": "String"
						},
						"Source": {
							"value": "temp",
							"type": "String"
						},
						"Source_Type": {
							"value": "k.a.",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_ASQL_SalesLT",
					"type": "LinkedServiceReference"
				}
			}
		],
		"concurrency": 1,
		"parameters": {
			"deltaload": {
				"type": "bool",
				"defaultValue": false
			}
		},
		"folder": {
			"name": "Pipelines"
		},
		"annotations": []
	}
}