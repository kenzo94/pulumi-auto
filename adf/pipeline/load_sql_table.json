{
	"name": "load_sql_table",
	"properties": {
		"activities": [
			{
				"name": "If deltaLoad",
				"description": "True: delta load\nFalse: full load",
				"type": "IfCondition",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@pipeline().parameters.deltaload",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Copy Product All Data",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "select * from @{concat(pipeline().parameters.schema,'.',pipeline().parameters.tableName)}",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "source1",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "temp",
									"type": "DatasetReference",
									"parameters": {
										"fileName": "temp_Product_Table.parquet"
									}
								}
							]
						}
					],
					"ifTrueActivities": [
						{
							"name": "LookupOldWaterMark",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "select WatermarkValue from WaterMarkTable where TableName='@{pipeline().parameters.tableName}'",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "source1",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "LookupNewWaterMark",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "select MAX(ModifiedDate) as NewWatermarkvalue from @{concat(pipeline().parameters.schema,'.',pipeline().parameters.tableName)}",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "source1",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "Copy Product Data",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "LookupNewWaterMark",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "LookupOldWaterMark",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "select * from @{concat(pipeline().parameters.schema,'.',pipeline().parameters.tableName)} where ModifiedDate> '@{activity('LookupOldWaterMark').output.firstRow.WatermarkValue}' and ModifiedDate<= '@{activity('LookupNewWaterMark').output.firstRow.NewWatermarkvalue}'",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"validateDataConsistency": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "source1",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "temp",
									"type": "DatasetReference",
									"parameters": {
										"fileName": "temp_Product_Table.parquet"
									}
								}
							]
						},
						{
							"name": "Stored procedure set new Watermark",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy Product Data",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[usp_write_watermark]",
								"storedProcedureParameters": {
									"modifiedDate": {
										"value": {
											"value": "@{activity('LookupNewWaterMark').output.firstRow.NewWatermarkvalue}",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"TableName": {
										"value": {
											"value": "@{activity('LookupOldWaterMark').output.firstRow.TableName}",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "source1",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			}
		],
		"parameters": {
			"deltaload": {
				"type": "bool"
			},
			"schema": {
				"type": "string"
			},
			"tableName": {
				"type": "string"
			}
		},
		"folder": {
			"name": "Pipelines"
		},
		"annotations": []
	}
}