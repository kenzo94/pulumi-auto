{
	"name": "DF_Import_ADLSTempEmail_HANNA",
	"properties": {
		"folder": {
			"name": "Import"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_ADLS_Temp",
						"type": "DatasetReference"
					},
					"name": "SRCADLTempEmail"
				},
				{
					"linkedService": {
						"referenceName": "LS_ADLS_Target",
						"type": "LinkedServiceReference"
					},
					"name": "SRCADLImportEmail"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "LS_ADLS_Target",
						"type": "LinkedServiceReference"
					},
					"name": "DSTADLInsertImportEmail"
				},
				{
					"linkedService": {
						"referenceName": "LS_ADLS_Target",
						"type": "LinkedServiceReference"
					},
					"name": "DSTADLUpdateImportEmail"
				}
			],
			"transformations": [
				{
					"name": "LKPIdentifierImportEmail"
				},
				{
					"name": "CSP"
				},
				{
					"name": "ALTupdate"
				},
				{
					"name": "ALTinsert"
				}
			],
			"script": "parameters{\n\ttableID as string ('Identifier'),\n\ttableName as string (\"Email\"),\n\ttableStructureInString as string ('Loginemail as string, Identifier as string, Firstname as string, Lastname as string')\n}\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:[(concat($tableName,'.parquet'))]) ~> SRCADLTempEmail\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: true,\n\tformat: 'delta',\n\tcompressionType: 'snappy',\n\tcompressionLevel: 'Fastest',\n\tfileSystem: 'import',\n\tfolderPath: ($tableName)) ~> SRCADLImportEmail\nSRCADLTempEmail, SRCADLImportEmail lookup(toString(byName($tableID)) == toString(byName($tableID)),\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LKPIdentifierImportEmail\nLKPIdentifierImportEmail split(isNull(toString(byName($tableID,'LKPIdentifierImportEmail'))),\n\t!isNull(toString(byName($tableID,'LKPIdentifierImportEmail'))),\n\tdisjoint: false) ~> CSP@(CSPinsert, CSPupdate)\nCSP@CSPupdate alterRow(updateIf(true())) ~> ALTupdate\nCSP@CSPinsert alterRow(insertIf(true())) ~> ALTinsert\nALTinsert sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tfileSystem: 'import',\n\tfolderPath: ($tableName),\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DSTADLInsertImportEmail\nALTupdate sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tfileSystem: 'import',\n\tfolderPath: ($tableName),\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:[($tableID)],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DSTADLUpdateImportEmail"
		}
	}
}